<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AESGame.Resources.Xaml.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Brushes.xaml" />
        <ResourceDictionary Source="../Fonts/Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Button" x:Key="BigButton" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            CornerRadius="4"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{StaticResource Ubuntu-Bold }"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <!--<Setter Property="BorderBrush" Value="{DynamicResource PrimaryColorBrush}" />-->
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="BigButtonPrimary" TargetType="Button" BasedOn="{StaticResource BigButton}">
        <Setter Property="Background" Value="{StaticResource Brushes.Gradient}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.FontColor.White}" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BigButtonWhite" TargetType="Button" BasedOn="{StaticResource BigButton}">
        <Setter Property="FontFamily" Value="{StaticResource Ubuntu-Medium }"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="500" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush"  Value="{DynamicResource TextColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#region notifications-->
    <Style x:Key="BigButtonWhiteNotifications" TargetType="Button" BasedOn="{StaticResource BigButtonWhite}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BigButtonPrimaryNotifications" TargetType="Button" BasedOn="{StaticResource BigButtonPrimary}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion notifications-->

    <!--#region common-->
    <Style TargetType="{x:Type Button}" x:Key="OKButton" BasedOn="{StaticResource BigButtonPrimary}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Width" Value="168"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CancelButton" BasedOn="{StaticResource BigButtonWhite}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Width" Value="168"/>
        <Setter Property="Height" Value="40"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CancelDangerButton" BasedOn="{StaticResource BigButtonWhite}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Width" Value="168"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="{DynamicResource RedDangerColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.FontColor.White}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion common-->

    <Style TargetType="{x:Type Button}" x:Key="ButtonPluginInstall" BasedOn="{StaticResource BigButtonPrimary}">
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonPluginRemove" BasedOn="{StaticResource BigButtonWhite}">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!--#region settingsSwitch-->
    <Style TargetType="{x:Type Button}" x:Key="SwitchButton">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource UbuntuFontFamily }"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="500" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource Gray2ColorBrush}" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Brushes.Dark.Basic.MainColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--#endregion settingsSwitch-->

    <Style TargetType="{x:Type ButtonBase}" x:Key="ButtonNoBorder">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style TargetType="{x:Type ButtonBase}" x:Key="ButtonTextBlock">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock Text="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style TargetType="{x:Type ButtonBase}" x:Key="ContextMenuButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            CornerRadius="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{StaticResource UbuntuFontFamily }"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Opacity" Value="0.5"/>-->
                <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundColor}" />
            </Trigger>
        </Style.Triggers>

    </Style>


</ResourceDictionary>
